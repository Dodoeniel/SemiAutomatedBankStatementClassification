version: "3.9"

services:
  reverse-proxy:
    image: traefik:v3.1
    command:
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --certificatesresolvers.le.acme.email=${LE_EMAIL}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --api.dashboard=false
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    restart: unless-stopped

  backend:
    build: ./backend
    env_file:
      - ./backend/.env        # falls du App-Configs/Secrets hast
    volumes:
      - ./backend:/app        # optional für lokales Dev
      - dbdata:/app           # falls du SQLite-Dateien persistent willst (liegt bei dir in /app)
    labels:
      - "traefik.enable=true"
      # Router für /api -> Backend
      - "traefik.http.routers.api.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=le"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
      # (Optional) Rate-Limit + Security-Header
      - "traefik.http.middlewares.secure.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.secure.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.secure.headers.stsPreload=true"
      - "traefik.http.middlewares.secure.headers.frameDeny=true"
      - "traefik.http.middlewares.secure.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.secure.headers.referrerPolicy=no-referrer"
      - "traefik.http.middlewares.csp.headers.contentSecurityPolicy=default-src 'self'; frame-ancestors 'none'; object-src 'none'; base-uri 'self'"
      - "traefik.http.middlewares.ratelimit.ratelimit.average=60"
      - "traefik.http.middlewares.ratelimit.ratelimit.burst=30"
      - "traefik.http.routers.api.middlewares=secure,ratelimit"
    restart: unless-stopped

  frontend:
    build: ./frontend
    depends_on: [backend]
    labels:
      - "traefik.enable=true"
      # Alles andere (/) -> Frontend
      - "traefik.http.routers.web.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=le"
      - "traefik.http.services.web.loadbalancer.server.port=80"
      # HTTP->HTTPS Redirect
      - "traefik.http.routers.web-redirect.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.web-redirect.entrypoints=web"
      - "traefik.http.routers.web-redirect.middlewares=redirect"
      - "traefik.http.middlewares.redirect.redirectscheme.scheme=https"
      # Security-Header auch fürs Frontend
      - "traefik.http.routers.web.middlewares=secure"
    restart: unless-stopped

volumes:
  dbdata: